[project]
name = "pywxm"
version = "0.0.0" # Version is set by the release workflow
description = "Asyncio Python API for WeatherXM"
authors = [{ name = "TheNoctambulist", email = "thenoctambulist@zoho.com" }]
dependencies = []
requires-python = ">=3.11"
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: AsyncIO",
    "Typing :: Typed",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
]

[project.urls]
Homepage = "https://github.com/thenoctambulist/pywxm"
Issues = "https://github.com/thenoctambulist/pywxm/issues"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.ruff.lint]
select = ["ALL"] # We'll disable specific rules where appropriate.

ignore = [
    "D417",   # Don't force every argument to be documented
    "EM101",  # raw-string-in-exception
    "EM102",  # f-string-in-exception
    "RUF022", # allow unsorted __all__
    "TRY003", # Exception messages are useful.
    "UP007",  # typing.Optional is useful. See https://github.com/astral-sh/ruff/issues/4858

    # Compatibility/redundancy with Ruff Formatter
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
strict = true

[tool.pdm]
distribution = true

[dependency-groups]
dev = ["pre-commit>=4.0.1", "mypy>=1.14.0", "ruff>=0.8.4"]
